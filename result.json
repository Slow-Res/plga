{"manage.py": "#!/usr/bin/env python\n\"\"\"Django's command-line utility for administrative tasks.\"\"\"\nimport os\nimport sys\n\n\ndef main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'covid.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"\n        ) from exc\n    execute_from_command_line(sys.argv)\n\n\nif __name__ == '__main__':\n    main()\n", "covid/__init__.py": "", "covid/asgi.py": "\"\"\"\nASGI config for covid project.\n\nIt exposes the ASGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.1/howto/deployment/asgi/\n\"\"\"\n\nimport os\n\nfrom django.core.asgi import get_asgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'covid.settings')\n\napplication = get_asgi_application()\n", "covid/settings.py": "\"\"\"\nDjango settings for covid project.\n\nGenerated by 'django-admin startproject' using Django 4.1.4.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.1/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/4.1/ref/settings/\n\"\"\"\n\nfrom pathlib import Path\n\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-o^_i*%ql#u_t@y$a)2asjh$@o98oi)m%p!$!z68(g$bg_s8jrw'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = ['*']\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n\n    'rest_framework',\n    'sars',\n    'records',\n    'corsheaders',\n\n    \n]\n\nMIDDLEWARE = [\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'covid.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'covid.wsgi.application'\n\n\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/4.1/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\n\nSTATIC_URL = 'static/'\n\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\n\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n\nCORS_ORIGIN_ALLOW_ALL = True\nCORS_ALLOW_CREDENTIALS = True", "covid/urls.py": "\"\"\"covid URL Configuration\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/4.1/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom django.urls import path , include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('' , include('sars.urls') ),\n    path('records/' , include('records.urls') )\n]\n", "covid/wsgi.py": "\"\"\"\nWSGI config for covid project.\n\nIt exposes the WSGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/4.1/howto/deployment/wsgi/\n\"\"\"\n\nimport os\n\nfrom django.core.wsgi import get_wsgi_application\n\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'covid.settings')\n\napplication = get_wsgi_application()\n", "records/__init__.py": "", "records/admin.py": "from django.contrib import admin\n\nfrom records.models import Country\n\n# Register your models here.\nadmin.site.register(Country)", "records/apps.py": "from django.apps import AppConfig\n\n\nclass RecordsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'records'\n", "records/models.py": "from django.db import models\n\n# Create your models here.\nclass Country(models.Model):\n    country=models.CharField(max_length=255,null=False)\n    total_confirmed_cases=models.CharField(max_length=255,null=False)\n    total_deaths_cases=models.CharField(max_length=255,null=False)\n    total_recovered_cases=models.CharField(max_length=255,null=False)\n    Date=models.DateTimeField(auto_now_add=False,null=False)", "records/serializers.py": "from rest_framework import serializers\n\nfrom .models import Country\n\nclass CountrySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Country\n        # fields = ('id' ,'country', 'Date')\n        fields = '__all__'", "records/tests.py": "from django.test import TestCase\n\n# Create your tests here.\n", "records/urls.py": "\nfrom django.contrib import admin\nfrom django.urls import path \nfrom .views import CountryListView , CountryDetailView\nurlpatterns = [\n    path('' , CountryListView.as_view() , name=\"list\"  ),\n    path('<int:pk>' , CountryDetailView.as_view() , name=\"detail\"   ),\n]\n\n", "records/views.py": "from rest_framework.generics import ListCreateAPIView , RetrieveUpdateDestroyAPIView\nfrom .serializers import CountrySerializer\nfrom .models import Country\n# Create your views here.\n\nclass CountryListView(ListCreateAPIView):\n    queryset=Country.objects.all()\n    serializer_class= CountrySerializer\n\nclass CountryDetailView(RetrieveUpdateDestroyAPIView):\n    queryset=Country.objects.all()\n    serializer_class= CountrySerializer\n", "sars/__init__.py": "", "sars/admin.py": "from django.contrib import admin\n\n# Register your models here.\n", "sars/apps.py": "from django.apps import AppConfig\n\n\nclass SarsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'sars'\n", "sars/models.py": "from django.db import models\n\n# Create your models here.\n", "sars/tests.py": "from django.test import TestCase\n\n# Create your tests here.\n", "sars/urls.py": "\nfrom django.contrib import admin\nfrom django.urls import path \nfrom .views import Home , Country , All_Countries\nurlpatterns = [\n    path('' , Home , name='home' ),\n    path('date/' , Country , name='country' ),\n    path('all/' , All_Countries , name='all' ),\n]\n\n\n", "sars/views.py": "\nfrom django.http import JsonResponse\nimport requests\n\n\ndef Home(request):\n\n    URL = \"https://api.covid19api.com/world/total\"\n    r = requests.get(url = URL)    \n    data = r.json()\n    # TODO: CACHING     \n    return JsonResponse(data)\n\n\ndef Country(request):\n\n    if request.GET.get('country') == None or request.GET.get('from') == None or request.GET.get('to') == None:\n        data= {\"error\" : \"True\" , \"Message\" : \"Missing Data\"}\n        return JsonResponse(data)\n    \n\n    country = request.GET['country']\n    from_date =  request.GET['from']\n    to_date = request.GET['to']\n    PARAMS = {\n        \"from\" : from_date,\n        \"to\": to_date,  \n    }\n    URL = f\"https://api.covid19api.com/country/{country}/status/confirmed\"\n    r = requests.get(url = URL , params= PARAMS)    \n    data = r.json()   \n    # TODO: CACHING  \n    return JsonResponse(data , safe=False)\n\ndef All_Countries(request):\n\n    URL = \"https://api.covid19api.com/summary\"\n    r = requests.get(url = URL)    \n    data = r.json() \n    # TODO: CACHING    \n    return JsonResponse(data['Countries'] , safe=False)\n", "records/migrations/0001_initial.py": "# Generated by Django 4.1.4 on 2022-12-23 14:06\n\nfrom django.db import migrations, models\n\n\nclass Migration(migrations.Migration):\n\n    initial = True\n\n    dependencies = [\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='Country',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('country', models.CharField(max_length=255)),\n                ('total_confirmed_cases', models.CharField(max_length=255)),\n                ('total_deaths_cases', models.CharField(max_length=255)),\n                ('total_recovered_cases', models.CharField(max_length=255)),\n                ('Date', models.DateTimeField()),\n            ],\n        ),\n    ]\n", "records/migrations/__init__.py": "", "sars/migrations/__init__.py": ""}